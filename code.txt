yypackage com.example.messaging.core.sender;

import com.example.messaging.core.model.ProcessedMessage;
import com.example.messaging.websocket.WebSocketSessionManager;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.socket.TextMessage;
import org.springframework.web.socket.WebSocketSession;

import java.io.IOException;

/**
 * WebSocket协议响应发送器
 */
@Slf4j
@Component
public class WebSocketResponseSender implements ResponseSender {
    private final WebSocketSessionManager sessionManager;
    
    @Autowired
    public WebSocketResponseSender(WebSocketSessionManager sessionManager) {
        this.sessionManager = sessionManager;
    }
    
    @Override
    public void send(ProcessedMessage response) {
        WebSocketSession session = sessionManager.getSession(response.getSessionId());
        if (session != null && session.isOpen()) {
            try {
                session.sendMessage(new TextMessage(new String(response.getResponseData())));
            } catch (IOException e) {
                log.error("Failed to send WebSocket message to session: " + response.getSessionId(), e);
                sessionManager.removeSession(response.getSessionId());
            }
        } else {
            log.warn("WebSocket session not found or closed: {}", response.getSessionId());
        }
    }
}